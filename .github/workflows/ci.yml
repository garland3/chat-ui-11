name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: fedora-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Python dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run backend tests
      working-directory: ./backend
      run: python -m pytest tests/ -v
    
    - name: Run frontend tests
      working-directory: ./frontend
      run: npm test -- --run
    
    - name: Install Playwright Browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps chromium
    
    - name: Run Playwright tests
      working-directory: ./frontend
      run: npm run test:e2e

  build-and-push:
    needs: test
    runs-on: fedora-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  test-container:
    needs: build-and-push
    runs-on: fedora-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for container test
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: type=sha,prefix={{branch}}-
    
    - name: Run tests in container
      run: |
        # Get the image tag from the previous step
        IMAGE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}-${{ github.sha }}"
        echo "Testing container: $IMAGE_TAG"
        
        # Pull the built image
        docker pull "$IMAGE_TAG"
        
        # Run backend tests in container
        docker run --rm \
          --workdir /app/backend \
          "$IMAGE_TAG" \
          python -m pytest tests/ -v
        
        # Run frontend tests in container (modify Dockerfile if needed to include dev deps for this)
        docker run --rm \
          --workdir /app/frontend \
          --entrypoint "" \
          "$IMAGE_TAG" \
          sh -c "npm ci && npm test -- --run"